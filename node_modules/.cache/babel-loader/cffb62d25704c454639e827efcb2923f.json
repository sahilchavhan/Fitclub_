{"ast":null,"code":"import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { getFrameData } from 'framesync';\n\nfunction inertia(_ref) {\n  var _ref$from = _ref.from,\n      from = _ref$from === void 0 ? 0 : _ref$from,\n      _ref$velocity = _ref.velocity,\n      velocity = _ref$velocity === void 0 ? 0 : _ref$velocity,\n      min = _ref.min,\n      max = _ref.max,\n      _ref$power = _ref.power,\n      power = _ref$power === void 0 ? 0.8 : _ref$power,\n      _ref$timeConstant = _ref.timeConstant,\n      timeConstant = _ref$timeConstant === void 0 ? 750 : _ref$timeConstant,\n      _ref$bounceStiffness = _ref.bounceStiffness,\n      bounceStiffness = _ref$bounceStiffness === void 0 ? 500 : _ref$bounceStiffness,\n      _ref$bounceDamping = _ref.bounceDamping,\n      bounceDamping = _ref$bounceDamping === void 0 ? 10 : _ref$bounceDamping,\n      _ref$restDelta = _ref.restDelta,\n      restDelta = _ref$restDelta === void 0 ? 1 : _ref$restDelta,\n      modifyTarget = _ref.modifyTarget,\n      driver = _ref.driver,\n      _onUpdate = _ref.onUpdate,\n      onComplete = _ref.onComplete,\n      onStop = _ref.onStop;\n  var currentAnimation;\n\n  function isOutOfBounds(v) {\n    return min !== undefined && v < min || max !== undefined && v > max;\n  }\n\n  function boundaryNearest(v) {\n    if (min === undefined) return max;\n    if (max === undefined) return min;\n    return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n  }\n\n  function startAnimation(options) {\n    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    currentAnimation = animate(Object.assign(Object.assign({}, options), {\n      driver: driver,\n      onUpdate: function onUpdate(v) {\n        var _a;\n\n        _onUpdate === null || _onUpdate === void 0 ? void 0 : _onUpdate(v);\n        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n      },\n      onComplete: onComplete,\n      onStop: onStop\n    }));\n  }\n\n  function startSpring(options) {\n    startAnimation(Object.assign({\n      type: \"spring\",\n      stiffness: bounceStiffness,\n      damping: bounceDamping,\n      restDelta: restDelta\n    }, options));\n  }\n\n  if (isOutOfBounds(from)) {\n    startSpring({\n      from: from,\n      velocity: velocity,\n      to: boundaryNearest(from)\n    });\n  } else {\n    var target = power * velocity + from;\n    if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n    var boundary = boundaryNearest(target);\n    var heading = boundary === min ? -1 : 1;\n    var prev;\n    var current;\n\n    var checkBoundary = function checkBoundary(v) {\n      prev = current;\n      current = v;\n      velocity = velocityPerSecond(v - prev, getFrameData().delta);\n\n      if (heading === 1 && v > boundary || heading === -1 && v < boundary) {\n        startSpring({\n          from: v,\n          to: boundary,\n          velocity: velocity\n        });\n      }\n    };\n\n    startAnimation({\n      type: \"decay\",\n      from: from,\n      velocity: velocity,\n      timeConstant: timeConstant,\n      power: power,\n      restDelta: restDelta,\n      modifyTarget: modifyTarget,\n      onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n    });\n  }\n\n  return {\n    stop: function stop() {\n      return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    }\n  };\n}\n\nexport { inertia };","map":{"version":3,"names":["animate","velocityPerSecond","getFrameData","inertia","from","velocity","min","max","power","timeConstant","bounceStiffness","bounceDamping","restDelta","modifyTarget","driver","onUpdate","onComplete","onStop","currentAnimation","isOutOfBounds","v","undefined","boundaryNearest","Math","abs","startAnimation","options","stop","Object","assign","_a","call","startSpring","type","stiffness","damping","to","target","boundary","heading","prev","current","checkBoundary","delta"],"sources":["C:/Users/Tapasya/Desktop/FitClub-Starter/node_modules/popmotion/dist/es/animations/inertia.mjs"],"sourcesContent":["import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { getFrameData } from 'framesync';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(Object.assign(Object.assign({}, options), { driver, onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete,\n            onStop }));\n    }\n    function startSpring(options) {\n        startAnimation(Object.assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}